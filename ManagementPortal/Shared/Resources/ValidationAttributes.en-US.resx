<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RegisterUserRequest_Name_StringLength" xml:space="preserve">
    <value>Minimum Length for Name is 2</value>
  </data>
  <data name="RegisterUserRequest_Name" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FieldRequired" xml:space="preserve">
    <value>{0} is a requiered field</value>
  </data>
  <data name="RegisterUserRequest_LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="RegisterUserRequest_Last_Name_StringLength" xml:space="preserve">
    <value>Minimum Length for Last Name is 2</value>
  </data>
  <data name="RegisterUserRequest_UsernameLength" xml:space="preserve">
    <value>Username length can't be more than 15.</value>
  </data>
  <data name="RegisterUserRequest_Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="RegisterUserRequest_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="RegisterUserRequest_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="RegisterUserRequest_Password_StringLength" xml:space="preserve">
    <value>Minimum Lenght for Passoword is {2}</value>
  </data>
  <data name="Verify2faCodeRequest_Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Verify2faCodeRequest_Code_StringLength" xml:space="preserve">
    <value>The code must contain six digits.</value>
  </data>
  <data name="LoginUserRequest_username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="LoginUserRequest_password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="ChangePasswordRequest_currentPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="ChangePasswordRequest_newPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="ChangePasswordRequest_confirmNewPassword" xml:space="preserve">
    <value>Confirmed password</value>
  </data>
  <data name="ChangePasswordRequest_compareNewPassword" xml:space="preserve">
    <value>Passwords do not match.</value>
  </data>
  <data name="AssignUserRole_username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="RegisterUserRequest_TwoFactorMethod" xml:space="preserve">
    <value>Two factor method</value>
  </data>
  <data name="AuthenticationResult_TwoFactorMethod" xml:space="preserve">
    <value>Two factor method</value>
  </data>
  <data name="ApplicationUser_Name" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="ApplicationUser_LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="ApplicationUser_username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="ApplicationUser_email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ApplicationUser_twoFactorMethod" xml:space="preserve">
    <value>Two factor method</value>
  </data>
  <data name="RegisterUserRequest_PasswordValidation" xml:space="preserve">
    <value>The password must contain at least one uppercase letter, one number, and one non-alphanumeric character.</value>
  </data>
  <data name="RegisterUserRequest_PasswordDoNotMatch" xml:space="preserve">
    <value>Passwords do not match</value>
  </data>
  <data name="RegisterUserRequest_ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="RegisterUserRequest_ValidEmail" xml:space="preserve">
    <value>Please enter a valid email address</value>
  </data>
  <data name="ApplicationRole_Name" xml:space="preserve">
    <value>Role name</value>
  </data>
  <data name="ApplicationUserDto_ValidEmail" xml:space="preserve">
    <value>Please enter a valid email address</value>
  </data>
  <data name="ApplicationUserDto_ValidName" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="ApplicationUserDto_ValidLastName" xml:space="preserve">
    <value>Last name is required</value>
  </data>
  <data name="ApplicationUser_Image" xml:space="preserve">
    <value>invalid image.</value>
  </data>
  <data name="UserCompleteEdit_RoleID" xml:space="preserve">
    <value>RolesId were not send</value>
  </data>
  <data name="UserProduct_product" xml:space="preserve">
    <value>Product field is required.</value>
  </data>
  <data name="UserProduct_externalIds" xml:space="preserve">
    <value>ExternalIds field is required</value>
  </data>
  <data name="InvalidPasswordCode" xml:space="preserve">
    <value>Invalid or expired recovery code.</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Invalid or expired recovery code.</value>
  </data>
</root>