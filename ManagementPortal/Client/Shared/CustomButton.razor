@inject IStringLocalizer<AppLocalization> Loc

<MudButton 
    Class="@Class"
           Disabled="@(Disabled || Waiting)"
           Color="Color" 
    ButtonType="@ButtonType"
    Variant="@Variant" 
    OnClick="ButtonClick" 
    Style=@($"width: {Width}px")>
    @if (Waiting)
    {
        <MudProgressCircular Color="Color" Indeterminate="true" Size="Size.Small" />
    }
    else
    {
        @Text
    }
</MudButton>

@code {
    [Parameter]
    public bool Waiting { get; set; } = false;

    [Parameter]
    public Color Color { get; set; } = Color.Default;

    [Parameter]
    public string Text { get; set; } = string.Empty;

    [Parameter]
    public int Width { get; set; } = 50;

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public Variant Variant { get; set; } = Variant.Text;

    [Parameter]
    public string Class { get; set; } = string.Empty;

    [Parameter]
    public ButtonType ButtonType { get; set; } = ButtonType.Button;

    [Parameter]
    public EventCallback OnClick { get; set; }

    private async Task ButtonClick()
    {
        if (OnClick.HasDelegate)
        {
            await OnClick.InvokeAsync();
        }
    }
}