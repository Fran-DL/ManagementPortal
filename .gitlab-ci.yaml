image: mcr.microsoft.com/dotnet/sdk:8.0

stages:
  - build
  - publish
  - pages

variables:
  SRV_PATH: ./ManagementPortal/Server/
  PUBLISH_PROFILE_SC: ./Properties/PublishProfiles/Self-Contained.pubxml
  PUBLISH_PROFILE_ISS: ./Properties/PublishProfiles/ISS.pubxml
  OUTPUT_DIR_PUBLISH: ./bin/Release/net8.0/publish


build:
  stage: build
  script:
    - dotnet clean
    - dotnet restore
    - df -h
    - dotnet build --configuration Release -warnaserror 
  allow_failure: false


# Job para compilar el proyecto en Windows x64 en ramas específicas (relese)
publish:
  stage: publish
  script:
    - echo "Iniciando Compilación de la solución"

    #- dotnet clean   // se hace en la etapa anterior
    #- dotnet restore // se hace en la etapa anterior

    # Cambiar al directorio del servidor
    - cd $SRV_PATH

    # Compilar la versión Self-Contained
    - dotnet publish -p:PublishProfile=$PUBLISH_PROFILE_SC

    # Compilar la versión de IIS
    #- dotnet publish -p:PublishProfile=$PUBLISH_PROFILE_ISS

    # Instalar zip si no está instalado
    - apt-get update && apt-get install -y zip

    # Guardar el la solución compilada
    - cd $OUTPUT_DIR_PUBLISH
    - zip -r  $CI_PROJECT_DIR/ManagementPortal_SC.zip ./ManagmentPortal.Client_selfcontained
    #- zip -r  $CI_PROJECT_DIR/ManagementPortal_IIS.zip ./IIS

  artifacts:
    paths:
      - ManagementPortal_SC.zip
      - PublishManagementPortal.cmd
    #  - ManagementPortal_IIS.zip
  rules:
    # Ejecutar en la rama realese y main
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH =~ /^release\//'

pages:
  stage: pages
  script:
    - dotnet restore
    # Actualizar los repositorios
    - apt-get update -y

    # Instalar Git
    - apt-get install -y git

    # Instalar dependencias necesarias para DocFX
    - apt-get install -y libglib2.0-0 libnss3 libnspr4 libdbus-1-3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libatspi2.0-0 libx11-6 libxcomposite1 libxdamage1 libxext6 libxfixes3 libxrandr2 libgbm1 libxcb1 libxkbcommon0 libpango-1.0-0 libcairo2 libasound2

    # Instalar DocFX como herramienta global
    - dotnet tool install -g docfx

    # Agregar DocFX al PATH actual
    - export PATH="$PATH:/root/.dotnet/tools"

    # Ejecutar DocFX con el archivo de configuración
    - docfx docfx.json

    # Mover el sitio generado a la carpeta `public`
    - mv _site public

  # Definir los artefactos generados
  artifacts:
    paths:
      - public

  rules:
    # Ejecutar solo en main
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH =~ /^release\//'

  before_script:
  - apt-get update
  - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
  - apt-get install -y nodejs
  - node --version

